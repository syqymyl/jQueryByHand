{"version":3,"sources":["jQuery.js"],"names":["window","$","jQuery","selectorOrArray","elements","document","querySelectorAll","Array","find","selector","array","i","length","elements2","from","concat","oldApi","each","fn","call","parent","node","indexOf","parentNode","push","children","print","console","log","addClass","className","classList","add","end"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,CAAP,GAAWD,OAAOE,MAAP,GAAgB,UAAUC,eAAV,EAA2B;AACpD,MAAIC,iBAAJ;AACA,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AACvCC,eAAWC,SAASC,gBAAT,CAA0BH,eAA1B,CAAX;AACD,GAFD,MAEO,IAAIA,2BAA2BI,KAA/B,EAAsC;AAC3CH,eAAWD,eAAX;AACD;AACD;AACA,SAAO;AACL;AACAK,QAFK,gBAEAC,QAFA,EAEU;AACb,UAAIC,QAAQ,EAAZ;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,YAAME,YAAYN,MAAMO,IAAN,CAAWV,SAASO,CAAT,EAAYL,gBAAZ,CAA6BG,QAA7B,CAAX,CAAlB;AACAC,gBAAQA,MAAMK,MAAN,CAAaF,SAAb,CAAR;AACA;AACA;AACA;AACD;AACDH,YAAMM,MAAN,GAAe,IAAf,CATa,CASQ;AACrB;AACA;AACA;AACA,aAAOd,OAAOQ,KAAP,CAAP;AACA;AACA;AACA;AACA;AACA;AACD,KArBI;AAsBLO,QAtBK,gBAsBAC,EAtBA,EAsBI;AACP,WAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACxCO,WAAGC,IAAH,CAAQ,IAAR,EAAcf,SAASO,CAAT,CAAd,EAA2BA,CAA3B;AACD;AACD,aAAO,IAAP;AACD,KA3BI;AA4BLS,UA5BK,oBA4BI;AACP,UAAMV,QAAQ,EAAd;AACA,WAAKO,IAAL,CAAU,UAACI,IAAD,EAAU;AAClB,YAAIX,MAAMY,OAAN,CAAcD,KAAKE,UAAnB,MAAmC,CAAC,CAAxC,EAA2C;AACzC;AACAb,gBAAMc,IAAN,CAAWH,KAAKE,UAAhB;AACD;AACF,OALD;AAMA,aAAOrB,OAAOQ,KAAP,CAAP;AACD,KArCI;AAsCLe,YAtCK,sBAsCM;AACT,UAAMf,QAAQ,EAAd;AACA,WAAKO,IAAL,CAAU,UAACI,IAAD,EAAU;AAClB;AACAX,cAAMc,IAAN,iCAAcH,KAAKI,QAAnB,GAFkB,CAEY;AAC/B,OAHD;AAIA,aAAOvB,OAAOQ,KAAP,CAAP;AACD,KA7CI;AA8CLgB,SA9CK,mBA8CG;AACNC,cAAQC,GAAR,CAAYxB,QAAZ;AACD,KAhDI;AAiDLyB,YAjDK,oBAiDIC,SAjDJ,EAiDe;AAClB;AACA;AACA;AACA,WAAK,IAAInB,IAAI,CAAb,EAAgBA,IAAIP,SAASQ,MAA7B,EAAqCD,GAArC,EAA0C;AACxCP,iBAASO,CAAT,EAAYoB,SAAZ,CAAsBC,GAAtB,CAA0BF,SAA1B;AACD;AACD,aAAO,IAAP;AACA;AACD,KA1DI;;AA2DLd,YAAQb,gBAAgBa,MA3DnB,EA2D2B;AAChCiB,OA5DK,iBA4DC;AACJ;AACA;AACA;AACA,aAAO,KAAKjB,MAAZ,CAJI,CAIgB;AACrB;AAjEI,GAAP;AAmED,CA3ED","file":"jQuery.0ff5e8db.map","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArray) {\r\n  let elements;\r\n  if (typeof selectorOrArray === \"string\") {\r\n    elements = document.querySelectorAll(selectorOrArray);\r\n  } else if (selectorOrArray instanceof Array) {\r\n    elements = selectorOrArray;\r\n  }\r\n  //api可以操作elements\r\n  return {\r\n    //闭包：函数访问外部变量\r\n    find(selector) {\r\n      let array = [];\r\n      for (let i = 0; i < elements.length; i++) {\r\n        const elements2 = Array.from(elements[i].querySelectorAll(selector));\r\n        array = array.concat(elements2);\r\n        //注意这里不能用array.push()，push调用一次只能push一个节点\r\n        //但elements[i].querySelectorAll(selector)可得到多个节点\r\n        //使用Array from()是将伪数组转成真正的数组，不用则会将所有得到的节点放在array[0]中\r\n      }\r\n      array.oldApi = this; //this是旧的api\r\n      //   const newApi = jQuery(array);\r\n      //   return newApi;\r\n      //简写为以下代码\r\n      return jQuery(array);\r\n      //return array;\r\n      //提问：如何链式操作(接着使用addClass())\r\n      //不能return this，this指的对象是原先的api(只能操作原先的elements，elements是.test节点数组，不是.child）\r\n      //也不能修改elements = array\r\n      //方法：将该数组作作为参数让jQuery接收，得到newApi，并让elements = array,即可使newApi操作array，并且原先api未改动\r\n    },\r\n    each(fn) {\r\n      for (let i = 0; i < elements.length; i++) {\r\n        fn.call(null, elements[i], i);\r\n      }\r\n      return this;\r\n    },\r\n    parent() {\r\n      const array = [];\r\n      this.each((node) => {\r\n        if (array.indexOf(node.parentNode) === -1) {\r\n          //去重：相同的爸爸只push一次\r\n          array.push(node.parentNode);\r\n        }\r\n      });\r\n      return jQuery(array);\r\n    },\r\n    children() {\r\n      const array = [];\r\n      this.each((node) => {\r\n        // array.push(node.children); //一个节点的所有儿子一起放在数组的一个位置\r\n        array.push(...node.children); //...是展开操作符：将不同节点的所有儿子拆开，单独放一个位置\r\n      });\r\n      return jQuery(array);\r\n    },\r\n    print() {\r\n      console.log(elements);\r\n    },\r\n    addClass(className) {\r\n      //api是一个对象，其中addClass是属性名，(className){...}是属性值\r\n      //\"addClass\":fn(className){...}与以下写法等效\r\n      //ES6语法\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].classList.add(className);\r\n      }\r\n      return this;\r\n      //等价与return api，因为obj.fn(p1) === obj.fn(obj, p1) === obj.fn(this, p1)\r\n    },\r\n    oldApi: selectorOrArray.oldApi, //添加数组中的oldApi属性\r\n    end() {\r\n      //提问：如何返回到上一层的api，给上一层的样式呢\r\n      //思路：保留oldApi，给array添加属性oldApi=旧api，再调用end()将该旧api返回。\r\n      //因为oldApi这个对象没有api属性，只有array里有，还应添加\r\n      return this.oldApi; //this是新的api\r\n    },\r\n  };\r\n};\r\n"]}