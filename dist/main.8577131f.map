{"version":3,"sources":["main.js"],"names":["jQuery","find","addClass","end","x","parent","print","children","div1","document","querySelector","div2","$"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,OAAP,EACGC,IADH,CACQ,QADR,EAEGC,QAFH,CAEY,MAFZ,EAGGA,QAHH,CAGY,OAHZ,EAIGA,QAJH,CAIY,QAJZ,EAKGC,GALH,GAMGD,QANH,CAMY,QANZ;;AAQA,IAAME,IAAIJ,OAAO,OAAP,CAAV;AACA;AACAI,EAAEC,MAAF,GAAWC,KAAX,IAAoB;AACpBN,OAAO,OAAP,EAAgBC,IAAhB,CAAqB,QAArB,EAA+BI,MAA/B,GAAwCC,KAAxC,IAAiD;;AAEjDF,EAAEG,QAAF,GAAaD,KAAb;;AAEA,IAAME,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAb,EAA8C;AAC9C,IAAMC,OAAOC,EAAE,OAAF,CAAb,EAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA","file":"main.8577131f.map","sourceRoot":"..\\src","sourcesContent":["// const api = jQuery(\".test\"); //不返回元素们，返回api对象\r\n// api.addClass(\"red\").addClass(\"blue\"); //遍历刚才所有获取的元素，添加.red和.blue，链式操作\r\n//jQuery(\".test\").addClass(\"red\").addClass(\"blue\");\r\n\r\n// console.log(jQuery(\".test\").find(\".child\"));\r\n// jQuery(\".test\").find(\".child\").addClass(\"blue\");\r\n\r\n// const api1 = jQuery(\".test\");\r\n// api1.addClass(\"blue\");\r\n// const api2 = api1.find(\".child\").addClass(\"green\");\r\n// api1.addClass(\"orange\"); //若使用elements = array，此时的api1操作的elements=.child节点，不是.test节点\r\n\r\n// const api1 = jQuery(\".test\");\r\n// const api2 = api1\r\n//   .find(\".child\")\r\n//   .addClass(\"blue\")\r\n//   .addClass(\"green\")\r\n//   .addClass(\"orange\");\r\n// const oldApi = api2.end().addClass(\"yellow\");\r\njQuery(\".test\")\r\n  .find(\".child\")\r\n  .addClass(\"blue\")\r\n  .addClass(\"green\")\r\n  .addClass(\"orange\")\r\n  .end()\r\n  .addClass(\"yellow\");\r\n\r\nconst x = jQuery(\".test\");\r\n// x.each((div) => console.log(div));\r\nx.parent().print(); //打印出一个body\r\njQuery(\".test\").find(\".child\").parent().print(); //打印出三个div，这三个div虽然属性相同，但不是同一个\r\n\r\nx.children().print();\r\n\r\nconst div1 = document.querySelector(\".test\"); //div1是DOM构造的对象，只能调用DOM API\r\nconst div2 = $(\".test\"); //div2是jQuery构造的对象\r\n//为了区分，在jQuery对象名前加$，如$div; DOM对象名前加el（可不加），如elDiv表示元素\r\n//默认$div有多个div，所以要遍历\r\n\r\n//jQuery.prototype中无法使用elements，因为elements定义域在jQuery即$中，\r\n//但可以通过this.elememts使用，因为this = api，而api具有elements属性（jQuery中添加了）\r\n//在jQuery.prototype中添加constructor: jQuery\r\n//built with网站\r\n"]}